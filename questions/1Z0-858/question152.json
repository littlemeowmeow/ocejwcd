{
    "question": "You are creating a library of custom tags that mimic the HTML form tags. When the user submits a<br>form that fails validation, the JSP form is forwarded back to the user. The <t:textField> tag must<br>support the ability to re-populate the form field with the request parameters from the user\u2019s last\nrequest. For example, if the user entered \u201cSamantha\u201d in the text field called firstName, then the\nform is re-populated like this:\n<input type=\u2019text\u2019 name=\u2019firstName\u2019 value=\u2019Samantha\u2019 />",
    "options": {
        "A": "Which tag handler method will accomplish this goal?",
        "B": "public int doStartTag() throws JspException { JspContext ctx = getJspContext(); String value = ctx.getParameter(this.name); if ( value == null ) value = \u201c\u201d; JspWriter out = pageContext.getOut(); try { out.write(String.format(INPUT, this.name, value)); } (Exception e) { throw new JspException(e); } return SKIP_BODY; } private static String INPUT = \u201c<input type=\u2019text\u2019 name=\u2019%s\u2019 value=\u2019%s\u2019 />\u201d;",
        "C": "public void doTag() throws JspException { JspContext ctx = getJspContext(); String value = ctx.getParameter(this.name); if ( value == null ) value = \u201c\u201d; JspWriter out = pageContext.getOut(); try { out.write(String.format(INPUT, this.name, value)); } (Exception e) { throw new JspException(e); } } private static String INPUT = \u201c<input type=\u2019text\u2019 name=\u2019%s\u2019 value=\u2019%s\u2019 />\u201d;",
        "D": "public int doStartTag() throws JspException { ServletRequet request = pageContext.getRequest(); String value = request.getParameter(this.name); if ( value == null ) value = \u201c\u201d; JspWriter out = pageContext.getOut(); try { out.write(String.format(INPUT, this.name, value)); } (Exception e) { throw new JspException(e); } return SKIP_BODY; } private static String INPUT = \u201c<input type=\u2019text\u2019 name=\u2019%s\u2019 value=\u2019%s\u2019 />\u201d;",
        "E": "public void doTag() throws JspException { ServletRequet request = pageContext.getRequest(); String value = request.getParameter(this.name); if ( value == null ) value = \u201c\u201d; JspWriter out = pageContext.getOut(); try { out.write(String.format(INPUT, this.name, value)); } (Exception e) { throw new JspException(e); } } private static String INPUT = \u201c<input type=\u2019text\u2019 name=\u2019%s\u2019 value=\u2019%s\u2019 />\u201d;"
    },
    "answer": "C",
    "multi": false
}